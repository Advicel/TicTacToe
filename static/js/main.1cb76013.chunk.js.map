{"version":3,"sources":["game/square.js","game/board.js","game/game.js","clock/clock.js","worldsTime/worldsTime.js","cloneInput/cloneInput.js","index.js"],"names":["Square","square","onClick","classes","useStyles","className","isWin","redSquare","value","defaultProps","makeStyles","background","border","borderRadius","fontSize","fontWeight","textAlign","cursor","outline","name","Board","squares","styles","gameBoard","map","index","status","display","gridTemplateColumns","gridTemplateRows","Game","useState","Array","fill","posX","posY","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","calculateWinner","lines","i","length","a","b","c","x","current","winner","moves","step","move","desc","slice","jumpTo","game","fancyGameBoard","newSquareValue","concat","Math","trunc","handleClick","gameInfo","timer","marginTop","Clock","Date","date","setDate","useEffect","setInterval","clearInterval","clock","toLocaleTimeString","WorldsTime","time","setTime","city","fetch","then","res","json","result","datetime","indexOf","getTime","worldsTime","button","boxShadow","color","height","padding","marginLeft","CloneInput","inputText","setInputText","pText","setPtext","cloneInput","root","TextField","label","onChange","e","target","theme","margin","spacing","width","input","output","minHeight","myComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cb76013.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\n\nexport default function Square({square, onClick}) {\n    const classes = useStyles();\n    return (\n        <button className={square.isWin ? classes.redSquare : classes.square} onClick = {onClick}>\n            {square.value}\n        </button>\n    );\n}\n\nSquare.propTypes = {\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nSquare.defaultProps ={\n    value: null,\n};\n\nconst useStyles = makeStyles({\n    square:{\n        background: \"#fff\",\n        border: \"1px solid #999\",\n        borderRadius:\"20%\",\n        fontSize: 24,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        \"&:hover\":{\n            cursor:\"pointer\",\n            background:\"#ab9e9e\",\n            border: \"1px solid blue\",\n        },\n        \"$:active\":{\n            outline:\"none\",\n        },\n        \"$:focus\":{\n            outline:\"none\",\n        },\n    },\n    redSquare:{\n        background: \"red\",\n        border: \"1px solid #999\",\n        borderRadius:\"20%\",\n        fontSize: 24,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n        outline:\"none\",\n        \"&:hover\":{\n            cursor:\"pointer\",\n            background:\"#ab9e9e\",\n            border: \"1px solid blue\",\n        },\n        \"&:active\":{\n            outline:\"none\",\n        },\n        \"&:focus\":{\n            outline:\"none\",\n        }, \n        \n    },\n    \n},{\n    name:\"square\",\n});","import React from \"react\";\nimport Square from \"./square.js\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\n\nexport default function Board ({squares,onClick,classes}) {\n    const styles = useStyles({classes});\n    return (\n        <div className={styles.gameBoard}>\n            {squares.map((square,index) => \n                <Square \n                    square = {squares[index]}\n                    onClick = {() => onClick(index)}\n                    key = {index}\n                />)}\n        </div>\n    );\n}  \n\nBoard.propTypes = {\n    squares: PropTypes.array,\n    onClick: PropTypes.func,\n};\n\nBoard.defaultProps ={\n    \n};\n\nconst useStyles = makeStyles({\n    gameBoard:{\n        display: \"inline-grid\",\n        gridTemplateColumns:\"40px 40px 40px\",\n        gridTemplateRows:\"40px 40px 40px\",\n    },\n});\n\n","import React, { useState } from 'react';\nimport Board from './board.js';\nimport { makeStyles } from '@material-ui/styles';\n\nlet status;\n\nexport default function Game() {\n  const classes = useStyles();\n\n  const [history, setHistory] = useState([\n    {\n      squares: Array(9).fill({\n        value: null,\n        isWin: false,\n      }),\n      posX: null,\n      posY: null,\n    },\n  ]);\n\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n\n  const handleClick = (i) => {\n    const current = history[stepNumber];\n    const squares = [...current.squares];\n    const newSquareValue = { value: xIsNext ? 'X' : 'O', isWin: false };\n    if (calculateWinner(squares) || squares[i].value) {\n      return;\n    }\n    squares[i] = newSquareValue;\n    //squares[i].value = xIsNext ? \"X\" : \"O\"\n    setHistory(\n      history.concat([\n        {\n          squares: squares,\n          posY: Math.trunc(i / 3),\n          posX: i > 2 ? i % 3 : i,\n        },\n      ])\n    );\n\n    setStepNumber(history.length);\n    setXisNext(!xIsNext);\n  };\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = [\n        squares[lines[i][0]],\n        squares[lines[i][1]],\n        squares[lines[i][2]],\n      ];\n      if (a.value && a.value === b.value && a.value === c.value) {\n        lines[i].map((x) => (history[stepNumber].squares[x].isWin = true));\n        return a.value;\n      }\n    }\n    return null;\n  };\n  const jumpTo = (step) => {\n    history[stepNumber].squares.map((x) => (x.isWin = false));\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n    setHistory(history.slice(0, step + 1));\n  };\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  const moves = history.map((step, move) => {\n    const desc = move\n      ? 'Перейти к ходу #' +\n        move +\n        ' (x: ' +\n        history[move].posX +\n        ' y: ' +\n        history[move].posY +\n        ')'\n      : 'К началу игры';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  if (winner) {\n    status = 'Победил ' + winner;\n  } else if (history.length === 10) {\n    status = 'Ничья';\n  } else {\n    status = 'Следующий ход: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <div className={classes.game}>\n      <Board\n        classes={{ gameBoard: classes.fancyGameBoard }}\n        squares={current.squares}\n        onClick={(i) => handleClick(i)}\n      />\n      <div className={classes.gameInfo}>\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(\n  {\n    fancyGameBoard: {\n      border: '2px solid red',\n    },\n    game: {\n      textAlign: 'center',\n      marginTop: 20,\n    },\n    gameInfo: {\n      textAlign: 'center',\n    },\n  },\n  {\n    index: 1,\n    name: 'game',\n  }\n);","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nlet timer;\n\nexport default function Clock() {\n    const classes =  useStyles();\n    const [date,setDate] = useState(new Date());\n\n    useEffect(() =>{\n        timer = setInterval(\n            () => setDate(new Date()),\n            1000\n          );\n        return () => clearInterval(timer);\n    });\n  \n    return (\n        <div className = {classes.clock}>\n            <h1>Привет, мир!</h1>\n            <h2>Сейчас {date.toLocaleTimeString()}.</h2>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    clock:{\n        textAlign:\"center\",\n    },\n});","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\n\nexport default function WorldsTime(){\n    const classes = useStyles();\n    const [time, setTime] = useState(null);\n\n    useEffect(()=>{\n        handleClick(\"moscow\");\n    },[]);\n\n\n    function handleClick(city){\n        getTime(city).then(result => setTime(result));\n    }\n\n    return (\n        <div className={classes.worldsTime}>\n            <button className ={classes.button} onClick ={()=>handleClick(\"samara\")}>время в Самаре</button>\n            <button className ={classes.button}  onClick ={()=>handleClick(\"moscow\")}>время в Москве</button>\n            <div>\n                {time===null ? \"здесь будет время\" : time}\n            </div>\n        </div>\n    );\n}\n\nfunction getTime(city){\n    return(\n        fetch(`http://worldtimeapi.org/api/timezone/Europe/${city}`)\n            .then(res=>res.json())\n            .then(result =>{\n                let date = result.datetime;\n                const index = date.indexOf(\"T\");\n                date = date.slice(index+1);\n                return date;\n            })\n    );\n}\n\nconst useStyles = makeStyles({\n    worldsTime:{\n        textAlign:\"center\",\n    },\n    button:{\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        '& button':{\n            marginLeft:10,\n        },\n    },\n});","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function CloneInput() {\n    const classes = useStyles();\n    const [inputText,setInputText] = useState();\n    const [pText,setPtext] = useState(inputText);\n\n    useEffect(()=>{\n        setPtext(inputText);\n    },[inputText]);\n\n    function handleChange(value){\n        setInputText(value);\n    }\n\n    return (\n        <div className={classes.cloneInput}>\n            <form className={classes.root}>\n                <TextField  label = \"Введите текст\" onChange={(e) => handleChange(e.target.value)}/>\n                <p>{pText}</p>\n            </form>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) =>({\n    root: {\n        '& > *': {\n          margin: theme.spacing(1),\n          width: '25ch',\n        },\n      },    \n    cloneInput:{\n        textAlign:\"center\",\n    },\n    input:{\n        borderRadius:\"20%\",\n    },\n    output:{\n        minHeight:20,\n        marginTop:10,\n        border:\"1px solid black\",\n        width:\"auto\",\n    },\n}));","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./game/game.js\";\nimport Clock from \"./clock/clock.js\";\nimport WorldsTime from \"./worldsTime/worldsTime.js\";\nimport CloneInput from \"./cloneInput/cloneInput.js\";\n\nconst myComponent = (\n  <div>\n    <Clock />\n    <WorldsTime />\n    <CloneInput />\n    <Game />\n  </div>\n);\n\nReactDOM.render(myComponent, document.getElementById(\"root\"));\n"],"sourceRoot":""}